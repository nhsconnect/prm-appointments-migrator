{"version":3,"sources":["config/env.ts","components/header/Header.tsx","styles/global.ts","components/cards.tsx","config/features.ts","services/mock/appointments.ts","services/superfetch.ts","services/transformers/migrator.ts","services/book-appointments.ts","views/book-appointments.tsx","services/find-appointments.ts","views/find-appointments.tsx","components/progressBar.tsx","views/finding.tsx","views/transferring.tsx","views/upload.tsx","components/apiInfo.tsx","views/content.tsx","views/App.tsx","config/serviceWorker.js","index.tsx"],"names":["publicPath","Header","className","role","data-testid","to","aria-label","xmlns","focusable","viewBox","fill","d","alt","src","href","marginBottom","small","css","regular","large","listReset","margin","padding","textIndent","listStyleType","hr","float","boxShadow","textDecoration","borderBottom","items","icon","success","notification","width","backgroundColor","marginTop","verticalAlign","map","item","practitioner","location","start","end","description","patientId","schedule","errorMessage","key","aria-hidden","strokeWidth","strokeLinecap","toString","renderTickOrCross","buildCards","domainOptions","prod","none","features","api","domain","mockFindAppointments","minutesDuration","mockBookAppointments","superfetch","a","url","headers","method","body","baseOptions","options","fetch","catch","error","console","log","response","json","migratorTransformer","payload","rest","Date","toLocaleString","split","bookAppointments","appMig","stub","JSON","stringify","appointments","useState","appointmentsSuccess","setAppointmentsSuccess","appointmentsFail","setAppointmentsFail","getSlotService","filter","fail","useEffect","length","findAppointments","findAppointmentsParth","findAppointmentsMigrator","setNumberAppts","startTransferring","setAppointmentsHook","setAppointments","onClick","pendingStates","transferring","nextPage","useReducer","acc","percentage","setPercentage","perRef","useRef","progressBg","height","borderRadius","bar","transition","history","useHistory","interval","setInterval","current","clearInterval","push","numberAppts","startFinding","border","fontSize","fontWeight","cursor","finding","apiInfoStyle","color","interstitial","setInterstitial","exact","path","App","featuresToSet","parse","window","search","parseBooleans","Object","entries","forEach","value","content","maxWidth","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b336f58.chunk.js","sourcesContent":["export const publicPath = 'prm-appointments-migrator';\n// export const domain = 'https://f6d7f692.ngrok.io';","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { publicPath } from '../../config/env';\n\nconst Header = () => {\n  return (\n    <header className=\"nhsuk-header nhsuk-header--transactional\" role=\"banner\" data-testid=\"header\">\n      <div className=\"nhsuk-width-container nhsuk-header__container\">\n        <div className=\"nhsuk-header__logo\">\n          <Link className=\"nhsuk-header__link\" to={`/${publicPath}`} aria-label=\"NHS homepage\">\n            <svg className=\"nhsuk-logo nhsuk-logo--white\" xmlns=\"http://www.w3.org/2000/svg\"\n              focusable=\"false\" viewBox=\"0 0 40 16\">\n              <path fill=\"#fff\" d=\"M0 0h40v16H0z\" />\n              <path fill=\"#005eb8\"\n                d=\"M3.9 1.5h4.4l2.6 9h.1l1.8-9h3.3l-2.8 13H9l-2.7-9h-.1l-1.8 9H1.1M17.3 1.5h3.6l-1 4.9h4L25 1.5h3.5l-2.7 13h-3.5l1.1-5.6h-4.1l-1.2 5.6h-3.4M37.7 4.4c-.7-.3-1.6-.6-2.9-.6-1.4 0-2.5.2-2.5 1.3 0 1.8 5.1 1.2 5.1 5.1 0 3.6-3.3 4.5-6.4 4.5-1.3 0-2.9-.3-4-.7l.8-2.7c.7.4 2.1.7 3.2.7s2.8-.2 2.8-1.5c0-2.1-5.1-1.3-5.1-5 0-3.4 2.9-4.4 5.8-4.4 1.6 0 3.1.2 4 .6\" />\n              <img alt=\"nhs-logo\" src=\"https://assets.nhs.uk/images/nhs-logo.png\" />\n            </svg>\n          </Link>\n        </div>\n        <div className=\"nhsuk-header__transactional-service-name\">\n          <a className=\"nhsuk-header__transactional-service-name--link\" href=\"/\">Appointments Migrator</a>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;","import { css } from 'emotion';\n\nexport const marginBottom = {\n    small: css({\n        marginBottom: '1rem'\n    }),\n    regular: css({\n        marginBottom: '2rem'\n    }),\n    large: css({\n        marginBottom: '4rem'\n    })\n};\n\nexport const listReset = css({\n    margin: '0',\n    padding: '0',\n    textIndent: '0',\n    listStyleType: 'none',\n});\n\nexport const float = {\n    right: css({\n        float: 'right'\n    })\n};\n\nexport const linkOverride = css({\n    '&:hover': {\n        boxShadow: '0 0 0 0px'\n    },\n    textDecoration: 'none'\n\n});\n\nexport const hr = css({\n    borderBottom: '4px solid #005eb8',\n    marginBottom: '1rem'\n});\n\nexport const boxShadow = '0px 0px 5px 0px rgba(0, 0, 0, 0.3)';","import { css, Interpolation } from 'emotion';\nimport React from 'react';\nimport { hr, listReset, marginBottom } from '../styles/global';\n\nexport default ({ items, icon = false, success = true }) => {\n\n    const renderTickOrCross = success => {\n        const tick = <svg className={`${verticalAlign} nhsuk-icon nhsuk-icon__tick`} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" aria-hidden=\"true\">\n            <path strokeWidth=\"4\" strokeLinecap=\"round\" d=\"M18.4 7.8l-8.5 8.4L5.6 12\"></path>\n        </svg>;\n\n        const cross = <svg className={`${verticalAlign} nhsuk-icon nhsuk-icon__cross`} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n            <path d=\"M17 18.5c-.4 0-.8-.1-1.1-.4l-10-10c-.6-.6-.6-1.6 0-2.1.6-.6 1.5-.6 2.1 0l10 10c.6.6.6 1.5 0 2.1-.3.3-.6.4-1 .4z\"></path>\n            <path d=\"M7 18.5c-.4 0-.8-.1-1.1-.4-.6-.6-.6-1.5 0-2.1l10-10c.6-.6 1.5-.6 2.1 0 .6.6.6 1.5 0 2.1l-10 10c-.3.3-.6.4-1 .4z\"></path>\n        </svg>;\n\n        const icon = {\n            'true': tick,\n            'false': cross,\n        }[success.toString()];\n\n        return icon;\n    };\n\n    const notificationColour = () => {\n        return success ? 'transparent' : '#ffb5b5';\n    }\n\n    const notification: Interpolation = css({\n        // height: '3rem',\n        width: '100%',\n        backgroundColor: notificationColour(),\n        marginTop: '-1rem',\n        marginBottom: '1rem',\n        padding: '0.5rem'\n    });\n\n    const verticalAlign: Interpolation = css({\n        verticalAlign: 'middle'\n    });\n\n    const buildCards = (items) => {\n        return items.map(item => {\n            const { practitioner, location, start, end, description, patientId, schedule, errorMessage } = item;\n            return (\n                <li className={marginBottom.large} key={patientId}>\n                    <div>\n                        <hr className={hr}></hr>\n                        <div className={notification}>\n                            {icon && renderTickOrCross(success)}\n                            <span className={verticalAlign}><em>{errorMessage}</em></span>\n                        </div>\n                        <h4>\n                            {patientId}\n                        </h4>\n                        <ul>\n                            <li>{start} ➡ {end}</li>\n                            <li>{practitioner}</li>\n                            <li>{location}</li>\n                            <li>{schedule}</li>\n                        </ul>\n                        <div>{description}</div>\n                    </div>\n                </li>\n            )\n        });\n    };\n\n    return (\n        <ul className={listReset}>\n            <div className={marginBottom.large}>\n                {buildCards(items)}\n            </div>\n        </ul>\n    );\n};\n","export const domainOptions = {\n    prod: 'prod',\n    none: 'none'\n};\n\nconst features = {\n    api: domainOptions.none,\n    domain: ''\n};\n\nexport const setFeatures = (featuresToSet: { [s: string]: unknown; } | ArrayLike<unknown>) => {\n    Object.entries(featuresToSet).forEach(([key, value]) => {\n        features[key] = value;\n    });\n};\n\nexport const api = () => {\n    return domainOptions[features.api] || domainOptions.none\n};\n\nexport const domain = () => {\n    return `https://${features.domain}.ngrok.io`;\n}","export const parthAppointments = [\n    {\n        \"patient\": null,\n        \"patientId\": 1,\n        \"slot\": null,\n        \"start\": \"2020-03-03T14:20:00\",\n        \"end\": \"2020-03-03T14:30:00\",\n        \"location\": null,\n        \"locationId\": 16,\n        \"practitioner\": null,\n        \"practitionerId\": 1,\n        \"description\": \"A test appointment booked through Interactive Swagger API\"\n    },\n    {\n        \"patient\": null,\n        \"patientId\": 2,\n        \"slot\": null,\n        \"start\": \"2020-03-03T09:00:00\",\n        \"end\": \"2020-03-03T09:10:00\",\n        \"location\": null,\n        \"locationId\": 17,\n        \"practitioner\": null,\n        \"practitionerId\": 2,\n        \"description\": \"A appointment to discuss test data\"\n    },\n    {\n        \"patient\": null,\n        \"patientId\": 2,\n        \"slot\": null,\n        \"start\": \"2020-03-03T09:10:00\",\n        \"end\": \"2020-03-03T09:20:00\",\n        \"location\": null,\n        \"locationId\": 17,\n        \"practitioner\": null,\n        \"practitionerId\": 2,\n        \"description\": \"A follow-up appointment for tests.\"\n    },\n    {\n        \"patient\": null,\n        \"patientId\": 2,\n        \"slot\": null,\n        \"start\": \"2020-03-03T11:20:00\",\n        \"end\": \"2020-03-03T11:30:00\",\n        \"location\": null,\n        \"locationId\": 16,\n        \"practitioner\": null,\n        \"practitionerId\": 1,\n        \"description\": \"A test appointment booked through Interactive Swagger API\"\n    },\n    {\n        \"patient\": null,\n        \"patientId\": 2,\n        \"slot\": null,\n        \"start\": \"2020-03-03T11:20:00\",\n        \"end\": \"2020-03-03T11:30:00\",\n        \"location\": null,\n        \"locationId\": 16,\n        \"practitioner\": null,\n        \"practitionerId\": 1,\n        \"description\": \"A test appointment booked through Interactive Swagger API\"\n    },\n    {\n        \"patient\": null,\n        \"patientId\": 3,\n        \"slot\": null,\n        \"start\": \"2020-03-03T14:20:00\",\n        \"end\": \"2020-03-03T14:30:00\",\n        \"location\": null,\n        \"locationId\": 16,\n        \"practitioner\": null,\n        \"practitionerId\": 1,\n        \"description\": \"A test appointment booked through Interactive Swagger API\"\n    }\n];\n\nexport const mockFindAppointments = [\n    {\n        description: 'A appointment to discuss test data.',\n        start: '2020-02-13T09:00:00+00:00',\n        end: '2020-02-13T09:10:00+00:00',\n        minutesDuration: 10,\n        schedule: 'Schedule 12 for phone appointments with staff nurse',\n        patientId: 'Laura Barry',\n        location: 'The Hepworth Surgery',\n        practitioner: 'Nichole Gilbert (G13579135)'\n    },\n    {\n        description: 'A follow-up appointment for tests.',\n        start: '2020-02-13T09:00:00+00:00',\n        end: '2020-02-13T09:10:00+00:00',\n        minutesDuration: 10,\n        schedule: 'Schedule 9 for general appointments',\n        patientId: 'Les Fawcett',\n        location: 'The Hockey Surgery Annex',\n        practitioner: 'Dr Melissa Parsons (G11111116)'\n    },\n    {\n        description: 'A appointment to discuss test data.',\n        start: '2020-02-13T09:00:00+00:00',\n        end: '2020-02-13T09:10:00+00:00',\n        minutesDuration: 10,\n        schedule: 'Schedule 12 for phone appointments with staff nurse',\n        patientId: 'Emily Margo',\n        location: 'The Hepworth Surgery',\n        practitioner: 'Nichole Gilbert (G13579135)'\n    },\n    {\n        description: 'A follow-up appointment for tests.',\n        start: '2020-02-13T09:00:00+00:00',\n        end: '2020-02-13T09:10:00+00:00',\n        minutesDuration: 10,\n        schedule: 'Schedule 9 for general appointments',\n        patientId: 'Parth Aggarwal',\n        location: 'The Hockey Surgery Annex',\n        practitioner: 'Dr Melissa Parsons (G11111116)'\n    },\n    {\n        description: 'A appointment to discuss test data.',\n        start: '2020-02-13T09:00:00+00:00',\n        end: '2020-02-13T09:10:00+00:00',\n        minutesDuration: 10,\n        schedule: 'Schedule 12 for phone appointments with staff nurse',\n        patientId: 'Natasha Desai',\n        location: 'The Hepworth Surgery',\n        practitioner: 'Nichole Gilbert (G13579135)'\n    },\n    {\n        description: 'A follow-up appointment for tests.',\n        start: '2020-02-13T09:00:00+00:00',\n        end: '2020-02-13T09:10:00+00:00',\n        minutesDuration: 10,\n        schedule: 'Schedule 9 for general appointments',\n        patientId: 'Tina Coxhead',\n        location: 'The Hockey Surgery Annex',\n        practitioner: 'Dr Melissa Parsons (G11111116)'\n    }\n];\n\nexport const mockBookAppointments = [\n    {\n        \"success\": false,\n        \"errorMessage\": \"Could not find corresponding slot\",\n        \"description\": \"A appointment to discuss test data.\",\n        \"start\": \"2020-02-13T09:00:00+00:00\",\n        \"end\": \"2020-02-13T09:10:00+00:00\",\n        \"minutesDuration\": 10,\n        \"schedule\": \"Schedule 12 for phone appointments with staff nurse\",\n        \"patientId\": \"Laura Barry\",\n        \"location\": \"The Hepworth Surgery\",\n        \"practitioner\": \"Nichole Gilbert (G13579135)\"\n    },\n    {\n        \"success\": false,\n        \"errorMessage\": \"Could not find corresponding slot\",\n        \"description\": \"A follow-up appointment for tests.\",\n        \"start\": \"2020-02-13T09:00:00+00:00\",\n        \"end\": \"2020-02-13T09:10:00+00:00\",\n        \"minutesDuration\": 10,\n        \"schedule\": \"Schedule 9 for general appointments\",\n        \"patientId\": \"Les Fawcett\",\n        \"location\": \"The Hockey Surgery Annex\",\n        \"practitioner\": \"Dr Melissa Parsons (G11111116)\"\n    },\n    {\n        \"success\": true,\n        \"errorMessage\": \"\",\n        \"description\": \"A appointment to discuss test data.\",\n        \"start\": \"2020-02-13T09:00:00+00:00\",\n        \"end\": \"2020-02-13T09:10:00+00:00\",\n        \"minutesDuration\": 10,\n        \"schedule\": \"Schedule 12 for phone appointments with staff nurse\",\n        \"patientId\": \"Emily Margo\",\n        \"location\": \"The Hepworth Surgery\",\n        \"practitioner\": \"Nichole Gilbert (G13579135)\"\n    },\n    {\n        \"success\": true,\n        \"errorMessage\": \"\",\n        \"description\": \"A follow-up appointment for tests.\",\n        \"start\": \"2020-02-13T09:00:00+00:00\",\n        \"end\": \"2020-02-13T09:10:00+00:00\",\n        \"minutesDuration\": 10,\n        \"schedule\": \"Schedule 9 for general appointments\",\n        \"patientId\": \"Parth Aggarwal\",\n        \"location\": \"The Hockey Surgery Annex\",\n        \"practitioner\": \"Dr Melissa Parsons (G11111116)\"\n    },\n    {\n        \"success\": true,\n        \"errorMessage\": \"\",\n        \"description\": \"A appointment to discuss test data.\",\n        \"start\": \"2020-02-13T09:00:00+00:00\",\n        \"end\": \"2020-02-13T09:10:00+00:00\",\n        \"minutesDuration\": 10,\n        \"schedule\": \"Schedule 12 for phone appointments with staff nurse\",\n        \"patientId\": \"Natasha Desai\",\n        \"location\": \"The Hepworth Surgery\",\n        \"practitioner\": \"Nichole Gilbert (G13579135)\"\n    },\n    {\n        \"success\": true,\n        \"errorMessage\": \"\",\n        \"description\": \"A follow-up appointment for tests.\",\n        \"start\": \"2020-02-13T09:00:00+00:00\",\n        \"end\": \"2020-02-13T09:10:00+00:00\",\n        \"minutesDuration\": 10,\n        \"schedule\": \"Schedule 9 for general appointments\",\n        \"patientId\": \"Tina Coxhead\",\n        \"location\": \"The Hockey Surgery Annex\",\n        \"practitioner\": \"Dr Melissa Parsons (G11111116)\"\n    }\n];","interface parameters {\n    url: string;\n    headers?: {};\n    method: string;\n    body?: string;\n}\n\nexport const superfetch = async ({ url, headers = {}, method = 'GET', body}: parameters) => {\n    const baseOptions: RequestInit = {\n        headers,\n        method\n    };\n\n    const options = body ? { ...baseOptions, body } : baseOptions;\n\n    const response = await fetch(url, options).catch((error) => {\n        console.log('error', error);\n    });\n\n    if (response) {\n        return await response.json();\n    }\n    return [];\n};\n","export const migratorTransformer = (payload) => {\n    return payload.map(({ start, end, ...rest }) => {\n        return {\n            start: new Date(start).toLocaleString(),\n            end: new Date(end).toLocaleString().split(',')[1],\n            ...rest\n        };\n    });\n};\n\nexport const splitSuccessFail = (items) => {\n    const success = items.filter(item => item.success);\n    const fail = items.filter(item => !item.success);\n    return { success, fail };\n};","import { api, domainOptions, domain } from '../config/features';\nimport { mockBookAppointments } from './mock/appointments';\nimport { superfetch } from './superfetch';\nimport { migratorTransformer } from './transformers/migrator';\n\nexport const bookAppointments = async (payload: {}[]) => {\n    const map = {\n        [domainOptions.prod]: appMig,\n        [domainOptions.none]: stub\n    };\n    return await map[api()](payload);\n};\n\nexport const appMig = async (payload: {}[]) => {\n    const url = `${domain}/book-appointments`;\n\n\n    const response = await superfetch({ url, body: JSON.stringify(payload), method: 'POST' });\n    return migratorTransformer(response);\n};\n\nexport const stub = () => {\n    return migratorTransformer(mockBookAppointments);\n};","import React, { useEffect, useState } from \"react\";\nimport Cards from \"../components/cards\";\nimport { bookAppointments } from \"../services/book-appointments\";\nimport { marginBottom } from \"../styles/global\";\n\nexport default ({ appointments }) => {\n  const [appointmentsSuccess, setAppointmentsSuccess] = useState([]);\n  const [appointmentsFail, setAppointmentsFail] = useState([]);\n\n  const getSlotService = async () => {\n    const response = await bookAppointments(appointments);\n    const success = response.filter(item => item.success);\n    const fail = response.filter(item => !item.success);\n\n    setAppointmentsSuccess(success);\n    setAppointmentsFail(fail);\n  };\n\n  useEffect(() => {\n    getSlotService();\n  });\n\n  return (\n    <div className={marginBottom.large}>\n      <h2 className={marginBottom.regular}>Failed transfers</h2>\n      <div className={marginBottom.regular}>\n        {appointmentsFail.length} transfers failed.\n      </div>\n      <Cards items={appointmentsFail} icon={true} success={false} />\n      <h2 className={marginBottom.regular}>Successful transfers</h2>\n      <div className={marginBottom.regular}>\n        {appointmentsSuccess.length} transfers successful.\n      </div>\n      <Cards items={appointmentsSuccess} icon={true} />\n    </div>\n  );\n};\n","import { api, domainOptions, domain } from '../config/features';\nimport { superfetch } from './superfetch';\nimport { migratorTransformer } from './transformers/migrator';\nimport { mockFindAppointments } from './mock/appointments';\n\nexport const findAppointments = async () => {\n    const map = {\n        [domainOptions.prod]: findAppointmentsParth,\n        [domainOptions.none]: findAppointmentsMigrator\n    };\n    return await map[api()]();\n};\n\nexport const findAppointmentsParth = async () => {\n    const url = `${domain()}/findappointments`;\n\n    const response = await superfetch({ url, method: 'GET' });\n    return migratorTransformer(response);\n};\n\nexport const findAppointmentsMigrator = async () => {\n    const response = mockFindAppointments;\n    return migratorTransformer(response);\n};","import React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport Cards from \"../components/cards\";\nimport { findAppointments } from \"../services/find-appointments\";\nimport { marginBottom } from \"../styles/global\";\nimport { pendingStates } from \"./content\";\n\ninterface findAppointments {\n  setNumberAppts: Dispatch<SetStateAction<string>>;\n  startTransferring: Dispatch<SetStateAction<string>>;\n  setAppointmentsHook: Dispatch<SetStateAction<never[]>>;\n}\n\nexport default ({\n  setNumberAppts,\n  startTransferring,\n  setAppointmentsHook\n}: findAppointments) => {\n  const [appointments, setAppointments] = useState([]);\n\n  const getSlotService = async () => {\n    const response = await findAppointments();\n    setAppointments(response);\n    setNumberAppts(response.length);\n    setAppointmentsHook(response);\n  };\n\n  useEffect(() => {\n    getSlotService();\n  });\n\n  return (\n    <div className={marginBottom.large}>\n      <p className={marginBottom.regular}>\n        Found {appointments.length} in current solution between <b>today</b> and{\" \"}\n        <b>13/04/2020</b>.\n      </p>\n\n        <button className=\"nhsuk-button\" onClick={() => startTransferring(pendingStates.transferring)}>Transfer all appointments</button>\n      <Cards items={appointments} />\n    </div>\n  );\n};\n","import { css } from 'emotion';\nimport React, { useEffect, useReducer, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { publicPath } from '../config/env';\nimport { boxShadow } from '../styles/global';\n\nexport default ({ nextPage }) => {\n\n    const [percentage, setPercentage] = useReducer(acc => {\n        if (acc < 100) {\n            return acc + 10;\n        }\n        return acc < 100 ? acc + 10 : 100;\n    }, 0);\n\n    const perRef = useRef(0);\n\n    const progressBg = css({\n        width: '50%',\n        backgroundColor: '#d8dde0',\n        height: '1rem',\n        borderRadius: '50px',\n        boxShadow: boxShadow\n    });\n    \n    const bar = css({\n        width: `${percentage}%`,\n        backgroundColor: '#005eb8',\n        height: '100%',\n        borderRadius: 'inherit',\n        transition: 'width 0.5s ease-out'\n    });\n\n    const history = useHistory();\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (perRef.current < 100) {\n                perRef.current += 10;\n                setPercentage();\n            } else {\n                clearInterval(interval);\n                history.push(`/${publicPath}/${nextPage}`);\n            }\n        }, 500);\n    });\n\n    return (\n        <div className={progressBg}>\n            <div className={bar}></div>\n        </div>\n    );\n};\n","import React from 'react';\nimport Progress from '../components/progressBar';\nimport { marginBottom } from '../styles/global';\n\nexport default () => {\n    return (\n        <div className={marginBottom.large}>\n            <div className={marginBottom.regular}><b>Finding all appointments...</b></div>\n            <Progress nextPage={'appointments'}/>\n        </div>\n    );\n};\n","import React from 'react';\nimport Progress from '../components/progressBar';\nimport { marginBottom } from '../styles/global';\n\nexport default ({ numberAppts }) => {\n    return (\n        <div className={marginBottom.large}>\n            <div className={marginBottom.regular}><b>Transferring {numberAppts} appointments...</b></div>\n            <Progress nextPage={'booked'}/>\n        </div>\n    );\n};\n","import { css } from 'emotion';\nimport React, { Fragment, Dispatch, SetStateAction } from 'react';\nimport { boxShadow, marginBottom } from '../styles/global';\nimport { pendingStates } from './content';\n\n\nexport default ({ startFinding }: { startFinding: Dispatch<SetStateAction<string>> }) => {\n    const border = css({\n        padding: '1rem',\n        borderRadius: '1rem',\n        fontSize: '1rem',\n        fontWeight: 'bold',\n        boxShadow,\n        width: '50%'\n    });\n\n    const cursor = css({\n        cursor: 'pointer'\n    });\n\n    return (\n        <Fragment>\n            <div className={marginBottom.small}>Using patient NHS numbers from:</div>\n            <p className={border}>\n                patient.nhsNumbers.csv\n            </p>\n            <div className=\"nhsuk-action-link\">\n                <button className={`${cursor} nhsuk-action-link__link`} onClick={() => startFinding(pendingStates.finding)}>\n                    <svg className=\"nhsuk-icon nhsuk-icon__arrow-right-circle\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                        <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                        <path d=\"M12 2a10 10 0 0 0-9.95 9h11.64L9.74 7.05a1 1 0 0 1 1.41-1.41l5.66 5.65a1 1 0 0 1 0 1.42l-5.66 5.65a1 1 0 0 1-1.41 0 1 1 0 0 1 0-1.41L13.69 13H2.05A10 10 0 1 0 12 2z\"></path>\n                    </svg>\n                    <span className=\"nhsuk-action-link__text\">Find all appointments</span>\n                </button>\n            </div>\n        </Fragment>\n    );\n};\n","import { css } from 'emotion';\nimport React from 'react';\nimport { domain } from '../config/features';\n\nconst apiInfoStyle = {\n    marginBottom: '0px!important',\n    color: 'lightgray'\n};\n\nexport default () => {\n    return <div className={`${css(apiInfoStyle)} nhsuk-body-s`}>\n        API: {domain()}\n    </div>\n};\n","import React, { useState, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport BookAppointments from './book-appointments';\nimport FindAppointments from './find-appointments';\nimport Finding from './finding';\nimport Transferring from './transferring';\nimport Upload from './upload';\nimport { publicPath } from '../config/env';\nimport ApiInfo from '../components/apiInfo';\nimport { api } from '../config/features';\n\nexport const pendingStates = {\n    finding: 'finding',\n    transferring: 'transferring'\n};\n\nexport default () => {\n    const [numberAppts, setNumberAppts] = useState();\n    const [interstitial, setInterstitial] = useState('');\n    const [appointments, setAppointments] = useState([]);\n\n    return <Fragment>\n        <Switch>\n            <Route exact path={`/${publicPath}`}>\n                {interstitial === pendingStates.finding ? <Finding /> : <Upload startFinding={setInterstitial} />}\n            </Route>\n            <Route path={`/${publicPath}/appointments`}>\n                {interstitial === pendingStates.transferring\n                    ? <Transferring numberAppts={numberAppts} />\n                    : <FindAppointments startTransferring={setInterstitial} setNumberAppts={setNumberAppts} setAppointmentsHook={setAppointments}/>\n                }\n            </Route>\n            <Route path={`/${publicPath}/booked`}>\n                <BookAppointments appointments={appointments}/>\n            </Route>\n        </Switch>\n        {api() !== 'none' && <ApiInfo />}\n    </Fragment>;\n};","import React, { Fragment } from 'react';\nimport Header from '../components/header/Header';\nimport { parse } from 'query-string';\nimport Content from './content';\nimport { setFeatures } from '../config/features';\nimport { css } from 'emotion';\n\nconst App = () => {\n  setFeatures(parse(window.location.search, { parseBooleans: true }));\n\n  const content = css({\n    maxWidth: '800px',\n    margin: '0 auto',\n    padding: '1rem'\n  });\n\n  return (\n    <Fragment>\n      <Header />\n      <div className={content}>\n        <Content />\n      </div>\n    </Fragment>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './views/App';\nimport * as serviceWorker from './config/serviceWorker';\nimport './index.scss';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}